name: Update PDF Index
on:
  push:
    paths:
      - 'notes/**'
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # Hourly updates

jobs:
  update-index:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Generate PDF list
        run: |
          mkdir -p scripts
          cat > scripts/generate-index.js << 'EOF'
          const fs = require('fs');
          const path = require('path');
          
          try {
            const notesDir = path.join(process.env.GITHUB_WORKSPACE, 'notes');
            const outputFile = path.join(process.env.GITHUB_WORKSPACE, 'pdf-list.json');
            
            if (!fs.existsSync(notesDir)) {
              fs.mkdirSync(notesDir, { recursive: true });
            }
            
            const files = fs.readdirSync(notesDir)
              .filter(file => file.toLowerCase().endsWith('.pdf'))
              .map(file => {
                const stats = fs.statSync(path.join(notesDir, file));
                return {
                  name: file,
                  size: formatBytes(stats.size),
                  date: stats.mtime.toISOString().split('T')[0]
                };
              });
            
            fs.writeFileSync(outputFile, JSON.stringify(files, null, 2));
            
            function formatBytes(bytes) {
              const units = ['B', 'KB', 'MB', 'GB'];
              if (bytes === 0) return '0 B';
              const i = Math.floor(Math.log(bytes) / Math.log(1024));
              return `${(bytes / Math.pow(1024, i)).toFixed(1)} ${units[i]}`;
            }
          } catch (error) {
            console.error('Error generating index:', error);
            process.exit(1);
          }
          EOF
          
          node scripts/generate-index.js
          
      - name: Commit changes
        if: always()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add pdf-list.json
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-update PDF list"
          git push